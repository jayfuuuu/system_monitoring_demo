server:
  http_listen_port: 9081
  grpc_listen_port: 0

target_config:
  sync_period: 30s

positions:
  filename: /tmp/positions.yaml
  sync_period: 30s

clients:
  - url: "R_LOKI_URL"

scrape_configs:
- job_name: system

  pipeline_stages:

  # This stage is only going to run if the scraped target has a label
  # of "name" with value "promtail".
  - match:
      selector: '{Client="R_HOSTNAME"}'
      stages:
      # The regex stage parses out a level, timestamp, and component. At the end
      # of the stage, the values for level, timestamp, and component are only
      # set internally for the pipeline. Future stages can use these values and
      # decide what to do with them.

      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z'
          max_wait_time: 3s

      - regex:
          expression: '(?P<timestamp>[T\d-:.Z]*) - (?P<level>[a-zA-Z]+):'

      # The labels stage takes the level and component entries from the previous
      # regex stage and promotes them to a label. For example, level=error may
      # be a label added by this stage.
      - labels:
          level:

      # Finally, the timestamp stage takes the timestamp extracted from the
      # regex stage and promotes it to be the new timestamp of the log entry,
      # parsing it as an RFC3339Nano-formatted value.
      - timestamp:
          format: RFC3339Nano
          source: timestamp

      - drop:
          longer_than: 1kb
          drop_counter_reason: "line_too_long"

  static_configs:
  - targets:
      - localhost
    labels:
      Console: R_HOSTNAME
      __path__: logs/errors.log
